@page "/transaction";
@inject FirstBlazor.Interfaces.IRepositoryU1<TranDBModel> rep_trans;
@inject FirstBlazor.Interfaces.IRepositoryU1<LableDBModel> rep_lable;
@inject NavigationManager NavManager;

<div class="container">
    <div class="row">
        <div class="col-4">
        </div>
        <div class="col-8 btn-group btn-group-sm">
            <button type="button" class="btn btn-ati-btn-light-disable">Расход/Доход</button>
            <button type="button" class="btn btn-ati-btn-light-action" @onclick="OnTranList">Записи</button>
            <button type="button" class="btn btn-ati-btn-light-action">Анализ</button>
            <button type="button" class="btn btn-ati-btn-light-action" @onclick="OnCategory">Категории</button>
            <button type="button" class="btn btn-ati-btn-light-action" @onclick="OnAccounts">Счета</button>
            <button type="button" class="btn btn-ati-btn-light-action" @onclick="OnLables">Метки</button>
        </div>
    </div>
    <div class="row bcolor-ati-whitesmoke">
        <div class="col-4">
            <p>10000</p>
        </div>
        <div class="col-8 @divBGColor.setSelected(val: _selectedTab).GetStyle">
            <div class="vl-ati-2 bcolor-ati-white">
                <div class="row">
                    <div class="btn-group col-12">
                        <button type="button" class="@btnSpend.setSelected(val: _selectedTab).GetStyle" @onclick="() => OnSelected(1)">@btnSpend.GetText</button>
                        <button type="button" class="@btnIncome.setSelected(val: _selectedTab).GetStyle" @onclick="() => OnSelected(2)">@btnIncome.GetText</button>
                    </div>
                </div>
                <div class="vl-ati-3">
                    <div class="row vl-ati-3">
                        <div class="col-2">
                            <span class="label col-form-label-sm fcolor-ati-black">Со счета:</span>
                        </div>
                        <div class="col-6">
                            <select class="form-control" id="account" @bind="_model.Account">
                                <option value="1" class="col-form-label-sm">Счет 1</option>
                                <option value="2" class="col-form-label-sm">Счет 2</option>
                                <option value="3" class="col-form-label-sm">Счет 3</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <input type="number" class="form-control text-right" id="amount" @bind="_model.Amount">
                        </div>
                    </div>
                    <div class="row vl-ati-3">
                        <div class="col-2">
                            <span class="label col-form-label-sm fcolor-ati-black">Категория:</span>
                        </div>
                        <div class="col-6">
                            <select class="form-control" id="category" @bind="_model.Category">
                                <option value="1" class="col-form-label-sm">Категория 1</option>
                                <option value="2" class="col-form-label-sm">Категория 2</option>
                                <option value="3" class="col-form-label-sm">Категория 3</option>
                            </select>
                        </div>
                        <div class="col-4">
                            <input type="date" class="form-control text-right" id="date" @bind="_model.Date">
                        </div>
                    </div>
                    <div class="row vl-ati-3">
                        <div class="col-8">
                            <input type="text" class="form-control" placeholder="Примечание" id="note" @bind="_model.Note">
                        </div>
                        <div class="col-4">
                            <button class="btn btn-primary btn-block" @onclick="OnShowPopupLable">
                                Добавить метку
                            </button>
                        </div>
                    </div>
                    <br />
                    <button type="button" class="@btnSave.GetStyle" @onclick="OnSave">@btnSave.GetText</button>
                </div>
            </div>
        </div>
    </div>
</div>
@if (ShowPopupLables)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h6 class="modal-title">Метки</h6>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="OnHidePopupLable">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    @foreach (var item in rep_lable.Items())
                    {
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="@item.Id" @onclick="() => OnSelectedLable(item)">
                            <label class="form-check-label" for="@item.Id">@item.Name</label>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="OnAddLables">Добавить</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="OnHidePopupLable">Отмена</button>
                </div>
            </div>
        </div>
    </div>
}

@code
{
    bool ShowPopupLables = false;
    HashSet<LableDBModel> _selectedLables = new();

    private TransactionPageModel _model;    //We do initialization here Initialized()

    private int _selectedTab = 1;

    private SaveButton btnSave = new();
    private IncomeButton btnIncome = new(id: 2);
    private SpendButton btnSpend = new(id: 1);

    private DivBGColor divBGColor = new();

    protected override void OnInitialized()
    {
        Initialized();
    }

    private void OnSelected(int p_newValue)
    {
        _selectedTab = p_newValue;
    }
    private void OnSave()
    {
        Save();
    }
    private void OnShowPopupLable()
    {
        _selectedLables.Clear();

        ShowPopupLables = true;
    }
    private void OnHidePopupLable()
    {
        ShowPopupLables = false;
    }
    private void OnSelectedLable(LableDBModel item)
    {
        Add_RemoveSelectedLable(item);
    }
    private void OnAddLables()
    {
        AddLables();
    }
    private void OnTranList()
    {
        NavManager.NavigateTo("/login");
    }
    private void OnAccounts()
    {
        NavManager.NavigateTo("/account");
    }
    private void OnCategory()
    {
        NavManager.NavigateTo("/category");
    }
    private void OnLables()
    {
        NavManager.NavigateTo("/lable");
    }
}